<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-3.0.xsd
		http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<int:chain id="indexerChain4" input-channel="indexRequestChannel4" output-channel="indexChannel4" >
		
		<int:header-enricher>
			<int:header name="indexName" expression="'${elasticsearch.index.twd.prefix}' + headers.jobId" overwrite="true" />
			<int:header name="indexDate" expression="headers.jobDate" />
			<int:header name="fxBatchSize" value="${loader.fx.fxBatchSize}" />
		</int:header-enricher>
		<int:service-activator ref="indexerService" method="createIndex" />
		<int:service-activator ref="indexBuilderService" method="buildAlphaFactors" />
		<int:service-activator ref="indexBuilderService" method="createFXIndex" />
		<int:service-activator ref="indexerService" method="flush" />
	</int:chain>

	<int:channel id="indexChannel4" />
	<int:channel id="loggingChannel4" />
	<int:channel id="errorLoggerChannel4"/>	
	<int:channel id="failedLogger4"/>
	<int:publish-subscribe-channel id="aggregationCompleteChannel4"/>
		
	
	
	<!-- Split on tickers for multi-threading -->
	<int:splitter id="tickerSplitter4" input-channel="indexChannel4"
	output-channel="indexTickerChannel4" ref="indexBuilderService" method="readTickers" />
	
		<!-- Load Data -->
 	<int:chain 
 		id="indexDataChain4"
		input-channel="indexTickerChannel4"
		output-channel="tickerAggregatorChannel4">

		<int:header-enricher>
			<int:error-channel value="indexErrorChannel4"/>
		</int:header-enricher>	
		
		<int:service-activator ref="indexBuilderService" method="index">
			<int:request-handler-advice-chain >
				<ref bean="retryAdvice4"/>
			</int:request-handler-advice-chain>
		</int:service-activator>
	</int:chain>
	
	
	<!-- Indexing Error Handling -->
	<int:chain 
		id="indexErrorHandlingChain4"
		input-channel="indexErrorChannel4" 
		output-channel="tickerAggregatorChannel4">		
			
			<int:transformer expression="payload.failedMessage"/>
						
			<int:enricher>
				<int:property name="indexed" value="false"/>
			</int:enricher>							
	</int:chain>
	
	<int:aggregator id="tickerAggregtor4" 
		input-channel="tickerAggregatorChannel4"
	 	output-channel="aggregationCompleteChannel4"
		correlation-strategy-expression="headers.jobId"
		release-strategy-expression="#this.size() == #this[0].headers.sequenceSize">
	</int:aggregator>
	
	<int:router	input-channel="aggregationCompleteChannel4" 
		ref="indexBuilderService"
		method="isJobSuccessful">
				
    	<int:mapping value="true" channel="indexRequestChannel5"/>
    	<int:mapping value="false" channel="failedJobChannel4"/>
    	    	
	</int:router>
	
	<!--  Job Completed successfully, create index and remove old indexes -->
	<int:chain input-channel="createAlias4" output-channel="loggingChannel4">
		<int:service-activator ref="indexerService"
			method="createIndexAlias" />
		<int:service-activator ref="indexBuilderService"
			method="deleteOldIndexes" />
	</int:chain>

	
	<int:logging-channel-adapter channel="loggingChannel4" level="INFO" expression=" 'Job Complete ' + payload.toString()" />
		
		<!-- Job failed -->
	<int:header-enricher input-channel="failedJobChannel4" output-channel="failedLogger4">
		<int:header name="failedJob" value="true"/>
	</int:header-enricher>	
		
	<int:logging-channel-adapter channel="failedLogger4" level="INFO" expression=" 'Job Failed ' + payload.toString()"/>
	
	
	<!-- Channel definitions -->
	<task:executor id="indexerTaskExecutor4" pool-size="${loader.threads}" queue-capacity="100" rejection-policy="CALLER_RUNS" />
	<task:executor id="indexerRequestChannelExecutor4" pool-size="1" queue-capacity="1" rejection-policy="DISCARD" />

	<int:channel id="indexRequestChannel4">
		<int:dispatcher task-executor="indexerRequestChannelExecutor4" />
	</int:channel>
	
	<int:channel id="indexTickerChannel4" datatype="com.wmsi.sgx.model.integration.CompanyInputRecord">	
		<int:dispatcher task-executor="indexerTaskExecutor4" />
	</int:channel>

	<int:channel id="tickerAggregatorChannel4">
		<int:interceptors>
			<int:wire-tap channel="statusLoggingChannel4" />
		</int:interceptors>
	</int:channel>
	
	<int:channel id="statusLoggingChannel4"/>	
	<int:logging-channel-adapter channel="statusLoggingChannel4" level="INFO" expression=" 'Processing ' + headers.sequenceNumber + ' of ' + headers.sequenceSize"/>
	
	<int:channel id="indexErrorChannel4">
		<int:interceptors>
			<int:wire-tap channel="errorLoggerChannel4"/>
		</int:interceptors>
	</int:channel>
	
	<!--  Error Logging -->
	<int:channel id="errorLoggerChannel4"/>		
	<int:service-activator input-channel="errorLoggerChannel4" ref="loggerAdapter" method="error"/>
	<bean id="loggerAdapter1" class="com.wmsi.sgx.logging.integration.IntegrationLoggerAdapter"/>
	
	<!-- Retry Handler -->
	<bean id="retryAdvice4" class="org.springframework.integration.handler.advice.RequestHandlerRetryAdvice">
		<property name="retryTemplate">
			<bean id="retryTemplate4" class="org.springframework.retry.support.RetryTemplate">	
				<property name="retryPolicy">
					<bean class="org.springframework.retry.policy.SimpleRetryPolicy">
						<property name="maxAttempts" value="4" />
					</bean>
				</property>
				<property name="backOffPolicy">
					<bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
						<property name="initialInterval" value="1000" />
						<property name="multiplier" value="5" />
					</bean>
				</property>
			</bean>			
		</property>
		<property name="recoveryCallback">
			<bean
				class="org.springframework.integration.handler.advice.ErrorMessageSendingRecoverer">
				<constructor-arg ref="indexErrorChannel4" />
			</bean>
		</property>
	</bean>


</beans>
