<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

 	<int:chain id="indexerChain" input-channel="indexRequestChannel" output-channel="indexChannel">
		<int:header-enricher>
			<int:header name="indexName" expression="'${elasticsearch.index.prefix}' + headers.jobId" />
			<int:header name="indexDate" expression="headers.jobDate" />			
		</int:header-enricher>	
		<int:service-activator ref="indexerService" method="createIndex"/>		
		<int:service-activator ref="indexBuilderService" method="buildAlphaFactors" /> 
	</int:chain>

	<int:splitter id="tickerSplitter"
		input-channel="indexChannel" 
		output-channel="indexTickerChannel"
		ref="indexBuilderService" method="getTickers"/>

 	<!-- Load Data -->
 	<int:chain
		input-channel="indexTickerChannel"
		output-channel="tickerAggregatorChannel">

		<int:header-enricher>
			<int:error-channel value="indexErrorChannel"/>
		</int:header-enricher>	
		
	<int:service-activator ref="indexBuilderService" method="index"/>
	</int:chain>

	<!-- Indexing Error Handling -->
	<int:chain 
		input-channel="indexErrorChannel" 
		output-channel="tickerAggregatorChannel">		
			
			<int:transformer expression="payload.failedMessage"/>
						
			<int:enricher>
				<int:property name="indexed" value="false"/>
			</int:enricher>							
	</int:chain>
		
	<int:aggregator id="tickerAggregtor" 
		input-channel="tickerAggregatorChannel"
	 	output-channel="aggregationCompleteChannel"
		correlation-strategy-expression="headers.jobId"
		release-strategy-expression="#this.size() == #this[0].headers.sequenceSize">
	</int:aggregator>
	
	<int:router	input-channel="aggregationCompleteChannel" 
		expression="#this.payload.?[indexed == false].size() == 0">
    	
    	<int:mapping value="true" channel="createAlias"/>
    	<int:mapping value="false" channel="failedJobChannel"/>
    	    	
	</int:router>
 
 	<int:service-activator input-channel="createAlias" output-channel="loggingChannel" ref="indexerService" method="createIndexAlias" />
	
	<int:header-enricher input-channel="failedJobChannel" output-channel="failedLogger">
		<int:header name="failedJob" value="true"/>
	</int:header-enricher>	
	
	<int:channel id="failedLogger"/>
	
	<int:logging-channel-adapter channel="failedLogger" level="ERROR" expression=" 'Job Failed ' + payload.toString()"/>
	
	<int:logging-channel-adapter channel="loggingChannel" level="ERROR" expression=" 'Job Complete ' + payload.toString()"/>
	
	<!-- 
	  Channel definitions
	 -->
	<int:channel id="indexTickerChannel" datatype="com.wmsi.sgx.model.integration.CompanyInputRecord">	
		<int:dispatcher task-executor="indexerTaskExecutor" />
	</int:channel>
	
	<int:channel id="indexErrorChannel">
		<int:interceptors>
		<int:wire-tap channel="errorLoggerChannel"/>
		</int:interceptors>
	</int:channel>
	
	<int:channel id="errorLoggerChannel"/>	
	<bean id="loggerAdapter" class="com.wmsi.sgx.model.integration.IntegrationLoggerAdapter"/>
	<int:service-activator input-channel="errorLoggerChannel" ref="loggerAdapter" method="error"/>
	
	<int:channel id="indexRequestChannel"/>		
	<int:channel id="indexChannel"/>
	<int:publish-subscribe-channel id="aggregationCompleteChannel"/>

	<int:channel id="tickerAggregatorChannel">
		<int:interceptors>
			<int:wire-tap channel="statusLoggingChannel" />
		</int:interceptors>
	</int:channel>
	
	<int:channel id="statusLoggingChannel"/>	
	<int:logging-channel-adapter channel="statusLoggingChannel" level="ERROR" expression=" 'Processing ' + headers.sequenceNumber + ' of ' + headers.sequenceSize"/>
	
	<int:channel id="loggingChannel"/>
 	
	<task:executor id="indexerTaskExecutor" pool-size="${loader.threads}" queue-capacity="100" rejection-policy="CALLER_RUNS" />
 	
</beans>
